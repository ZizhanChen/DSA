/*
 * Copyright (c) 2016 Fuzhou Rockchip Electronics Co., Ltd
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "rk3399-firefly-port.dtsi"

/ {
	model = "ROC-RK3399-PC-Base(Android)";
	compatible = "rockchip,android", "rockchip,roc-rk3399-pc", "rockchip,rk3399";

	test-power {
		status = "okay";
	};

	usb-charge {
		compatible = "usb-ext-charge";
		status = "okay";
		io-channels = <&saradc 0>;
        extcon = <&fusb0>;
		pinctrl-names = "default";
		pinctrl-0 = <&vcc_chargen_h &bat_int_h &cur_ctl_h &poe_det_h>;
	    bat-int = <&gpio2 28 IRQ_TYPE_EDGE_RISING>;
		charge-en-gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>;
		cur-ctl-gpios = <&gpio3 26 GPIO_ACTIVE_HIGH>;
		poe-state-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
	};

};




/* camera */
&i2c1 {

	XC6130b: XC6130b@23{
        status = "disabled";
        compatible = "firefly,xc7022";
        reg = <0x23>;
            clocks = <&cru SCLK_CIF_OUT>;
            clock-names = "xvclk";
            //avdd-supply = <&vcc_mipi>;
            reset-gpios = <&gpio1 22 GPIO_ACTIVE_HIGH>;
            pinctrl-names = "rockchip,camera_default";
            pinctrl-0 = <&cif_clkout>;

			firefly,clkout-enabled-index = <0>;
            rockchip,camera-module-index = <0>;
            rockchip,camera-module-facing = "back";
            rockchip,camera-module-name = "NC";
            rockchip,camera-module-lens-name = "NC";
        port {
                ucam_out0: endpoint {
                        remote-endpoint = <&mipi_in_ucam0>;
                        data-lanes = <1 2>;
                };
        };
	};
	XC7022b: XC7022b@1b{
		status = "disabled";
        compatible = "firefly,xc7022";
        reg = <0x1b>;
            clocks = <&cru SCLK_CIF_OUT>;
            clock-names = "xvclk";
            //avdd-supply = <&vcc_mipi>;
            reset-gpios = <&gpio1 23 GPIO_ACTIVE_HIGH>;
            pinctrl-names = "rockchip,camera_default";
            pinctrl-0 = <&cif_clkout>;

			firefly,clkout-enabled-index = <0>;
            rockchip,camera-module-index = <1>;
            rockchip,camera-module-facing = "front";
            rockchip,camera-module-name = "NC";
            rockchip,camera-module-lens-name = "NC";
        port {
                ucam_out1: endpoint {
                        remote-endpoint = <&mipi_in_ucam1>;
                        data-lanes = <1 2>;
                };
        };
	};
};

&mipi_dphy_rx0 {
	status = "okay";
	ports {
		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
			dphy_rx0_out: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&isp0_mipi_in>;
				// isp 端的 port 名
			};
		};
	};
};

&mipi_dphy_tx1rx1 {
    status = "okay";
    ports {
        port@1 {
            reg = <1>;
            #address-cells = <1>;
            #size-cells = <0>;
            dphy_tx1rx1_out: endpoint@0 {
                    reg = <0>;
                    remote-endpoint = <&isp1_mipi_in>;
            };
        };
    };
};

&rkisp1_0 {
    status = "okay";
    port {
		#address-cells = <1>;
		#size-cells = <0>;
		isp0_mipi_in: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&dphy_rx0_out>;
			// mipi dphy 端的 port 名
		};
	};
};

&rkisp1_1 {
    status = "okay";
    port {
		#address-cells = <1>;
		#size-cells = <0>;
		isp1_mipi_in: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&dphy_tx1rx1_out>;
			// mipi dphy 端的 port 名
		};
	};
};

&isp0_mmu {
    status = "okay";
    //status = "disabled";
};

&isp1_mmu {
    status = "okay";
};


/* ROC-RK3399-PC porting */
&vcc2v8_dvp {
    regulator-min-microvolt = <1800000>;
    regulator-max-microvolt = <1800000>;
};

&vcca1v8_codec {
    regulator-min-microvolt = <900000>;
    regulator-max-microvolt = <900000>;
};
&io_domains {
    bt656-supply = <&vcc_3v0>;
};

&rk808 {
	pinctrl-0 = <&pmic_int_l &pmic_dvs2>;
	/delete-property/ pmic,hold-gpio;
	/delete-property/ pmic,stby-gpio;
};

&vcc3v3_3g {
	status = "disabled";
};

&rt5640 {
	status = "disabled";
};
&rt5640_sound {
	status = "disabled";
};

&spi1{
	status = "okay";
    spidev0: spidev@00 {
        status = "okay";
        compatible = "jedec,spi-nor";
        reg = <0x00>;
        spi-max-frequency = <48000000>;
    };
};
&uart4 {
	status = "disable";

};
/* END ROC-RK3399-PC porting */

&pcie_phy {
	status = "okay";
};

&pcie0 {
	status = "okay";
};

&pinctrl {
	chargen {
		vcc_chargen_h: vcc-chargen-h {
			rockchip,pins = <0 1 RK_FUNC_GPIO &pcfg_pull_none>;
		};
		bat_int_h: bat-int-h {
			rockchip,pins = <2 28 RK_FUNC_GPIO &pcfg_pull_none>;
		};
		cur_ctl_h: cur-ctl-h {
			rockchip,pins = <3 26 RK_FUNC_GPIO &pcfg_pull_none_20ma>;
		};
		poe_det_h: poe-det-h {
			rockchip,pins = <0 12 RK_FUNC_GPIO &pcfg_pull_down>;
		};
	};

};

